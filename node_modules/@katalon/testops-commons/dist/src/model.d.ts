export interface withUuid {
    uuid: string;
    parentUuid?: string;
}
export declare enum Status {
    PASSED = "PASSED",
    FAILED = "FAILED",
    ERROR = "ERROR",
    INCOMPLETE = "INCOMPLETE",
    SKIPPED = "SKIPPED"
}
export interface Executable {
    status?: Status;
    start: number;
    stop?: number;
    duration?: number;
}
export interface Execution extends withUuid, Executable {
}
export interface Metadata {
    framework?: string;
    language?: string;
    version?: string;
    reportFolder?: string;
    buildLabel?: string;
    buildUrl?: string;
    sessionId?: string;
}
export interface Error {
    message?: string;
    stackTrace?: string;
}
export interface TestResult extends withUuid, Executable {
    name?: string;
    suiteName?: string;
    description?: string;
    parameter?: any;
    errors?: Error[];
}
export interface TestResults {
    results?: TestResult[];
}
export interface TestSuite extends withUuid, Executable {
    name?: string;
    description?: string;
}
export interface TestSuites {
    suites?: TestSuite[];
}
